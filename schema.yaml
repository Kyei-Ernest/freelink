openapi: 3.0.3
info:
  title: Freelink
  version: 1.0.0
  description: API for freelancer system
paths:
  /api/clients/profile/:
    get:
      operationId: api_clients_profile_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
          description: ''
    post:
      operationId: api_clients_profile_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProfile'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
          description: ''
    put:
      operationId: api_clients_profile_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProfile'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
          description: ''
  /api/dashboard/:
    get:
      operationId: api_dashboard_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ''
    post:
      operationId: api_dashboard_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dashboard'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ''
    put:
      operationId: api_dashboard_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dashboard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dashboard'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ''
  /api/escrow/escrow/{transaction_id}/:
    get:
      operationId: api_escrow_escrow_retrieve
      parameters:
      - in: path
        name: transaction_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Escrow'
          description: ''
  /api/freelancers/profile/:
    get:
      operationId: api_freelancers_profile_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreelancerProfile'
          description: ''
    post:
      operationId: api_freelancers_profile_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreelancerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FreelancerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FreelancerProfile'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreelancerProfile'
          description: ''
    put:
      operationId: api_freelancers_profile_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreelancerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FreelancerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FreelancerProfile'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreelancerProfile'
          description: ''
  /api/jobs/:
    get:
      operationId: api_jobs_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
          description: ''
  /api/jobs/{id}/:
    get:
      operationId: api_jobs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/jobs/{id}/apply/:
    get:
      operationId: api_jobs_apply_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobApplication'
          description: ''
    post:
      operationId: api_jobs_apply_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobApplication'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
          description: ''
  /api/jobs/{id}/job_status/:
    get:
      operationId: api_jobs_job_status_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobCompletion'
          description: ''
    patch:
      operationId: api_jobs_job_status_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJobCompletion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJobCompletion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJobCompletion'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCompletion'
          description: ''
  /api/jobs/applications/:
    get:
      operationId: api_jobs_applications_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobApplication'
          description: ''
  /api/jobs/applications/{id}/select/:
    put:
      operationId: api_jobs_applications_select_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobApplication'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
          description: ''
    patch:
      operationId: api_jobs_applications_select_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJobApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJobApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJobApplication'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
          description: ''
  /api/jobs/create:
    post:
      operationId: api_jobs_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/notifications/:
    get:
      operationId: api_notifications_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
          description: ''
  /api/ratings/{user_id}/:
    get:
      operationId: api_ratings_list
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rating'
          description: ''
    post:
      operationId: api_ratings_create
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
  /api/transactions/:
    get:
      operationId: api_transactions_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    post:
      operationId: api_transactions_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /api/transactions/{transaction_id}/status/:
    put:
      operationId: api_transactions_status_update
      parameters:
      - in: path
        name: transaction_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TransactionStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TransactionStatus'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatus'
          description: ''
  /api/users/change-password/:
    post:
      operationId: api_users_change_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /api/users/login/:
    post:
      operationId: api_users_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/users/logout/:
    post:
      operationId: api_users_logout_create
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/users/password-reset-request/:
    post:
      operationId: api_users_password_reset_request_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/users/profile/:
    get:
      operationId: api_users_profile_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_profile_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_profile_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/register/:
    post:
      operationId: api_users_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/users/reset-password/:
    post:
      operationId: api_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /api/users/send-verification-email/:
    post:
      operationId: api_users_send_verification_email_create
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/users/verify-email/:
    post:
      operationId: api_users_verify_email_create
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/users/verify-phone/:
    post:
      operationId: api_users_verify_phone_create
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/wallet/wallet/:
    get:
      operationId: api_wallet_wallet_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_wallet_wallet_create
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_wallet_wallet_update
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    AvailabilityEnum:
      enum:
      - FULL_TIME
      - PART_TIME
      - NOT_AVAILABLE
      type: string
      description: |-
        * `FULL_TIME` - Full Time
        * `PART_TIME` - Part Time
        * `NOT_AVAILABLE` - Not Available
    BudgetRangeEnum:
      enum:
      - LOW
      - MEDIUM
      - HIGH
      type: string
      description: |-
        * `LOW` - ₵0 - ₵5,000
        * `MEDIUM` - ₵5,001 - ₵20,000
        * `HIGH` - ₵20,001+
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
        confirm_new_password:
          type: string
          writeOnly: true
      required:
      - confirm_new_password
      - new_password
      - old_password
    ClientProfile:
      type: object
      properties:
        company_name:
          type: string
          description: Name of the client's company or organization
          maxLength: 100
        industry:
          type: string
          description: Industry or sector (e.g., Technology, Healthcare)
          maxLength: 100
        project_types:
          type: string
          description: Preferred project types (e.g., Web Development, Mobile Apps)
          maxLength: 200
        budget_range:
          allOf:
          - $ref: '#/components/schemas/BudgetRangeEnum'
          description: |-
            Typical project budget range

            * `LOW` - ₵0 - ₵5,000
            * `MEDIUM` - ₵5,001 - ₵20,000
            * `HIGH` - ₵20,001+
        preferred_communication:
          allOf:
          - $ref: '#/components/schemas/PreferredCommunicationEnum'
          description: |-
            Preferred communication method

            * `EMAIL` - Email
            * `PHONE` - Phone
            * `VIDEO_CALL` - Video Call
            * `CHAT` - Chat
    Dashboard:
      type: object
      properties:
        preferences:
          description: 'User preferences for dashboard layout/widgets (e.g., {''widgets'':
            [''wallet'', ''transactions'']})'
        cached_metrics:
          description: 'Cached metrics (e.g., {''total_earnings'': 5000, ''pending_transactions'':
            2})'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - updated_at
    Escrow:
      type: object
      properties:
        transaction_id:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          description: Amount held in escrow
        status:
          allOf:
          - $ref: '#/components/schemas/EscrowStatusEnum'
          description: |-
            Escrow status

            * `HELD` - Held
            * `RELEASED` - Released
            * `REFUNDED` - Refunded
            * `DISPUTED` - Disputed
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - transaction_id
      - updated_at
    EscrowStatusEnum:
      enum:
      - HELD
      - RELEASED
      - REFUNDED
      - DISPUTED
      type: string
      description: |-
        * `HELD` - Held
        * `RELEASED` - Released
        * `REFUNDED` - Refunded
        * `DISPUTED` - Disputed
    FreelancerProfile:
      type: object
      properties:
        bio:
          type: string
          description: A short description of the freelancer
          maxLength: 1000
        skills:
          type: string
          description: Comma-separated list of skills (e.g., Python, Django, JavaScript)
          maxLength: 500
        hourly_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Hourly rate in USD
        portfolio_url:
          type: string
          format: uri
          nullable: true
          description: Link to portfolio or personal website
          maxLength: 200
        availability:
          allOf:
          - $ref: '#/components/schemas/AvailabilityEnum'
          description: |-
            Current availability status

            * `FULL_TIME` - Full Time
            * `PART_TIME` - Part Time
            * `NOT_AVAILABLE` - Not Available
    Job:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
        budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        location:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        deadline:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/StatusE8dEnum'
        client:
          type: integer
          readOnly: true
      required:
      - budget
      - client
      - created_at
      - deadline
      - description
      - id
    JobApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        cover_letter:
          type: string
        is_selected:
          type: boolean
        applied_at:
          type: string
          format: date-time
          readOnly: true
        selected_at:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/JobApplicationStatusEnum'
        message:
          type: string
        is_active:
          type: boolean
        attachment:
          type: string
          format: uri
          nullable: true
        feedback:
          type: string
        job:
          type: integer
        freelancer:
          type: integer
      required:
      - applied_at
      - cover_letter
      - freelancer
      - id
      - job
    JobApplicationStatusEnum:
      enum:
      - PENDING
      - ACCEPTED
      - REJECTED
      - WITHDRAWN
      type: string
      description: |-
        * `PENDING` - Pending
        * `ACCEPTED` - Accepted
        * `REJECTED` - Rejected
        * `WITHDRAWN` - Withdrawn
    JobCompletion:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusE8dEnum'
          readOnly: true
      required:
      - status
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        message:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_read:
          type: boolean
        user:
          type: integer
      required:
      - created_at
      - id
      - message
      - title
      - user
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PatchedJobApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        cover_letter:
          type: string
        is_selected:
          type: boolean
        applied_at:
          type: string
          format: date-time
          readOnly: true
        selected_at:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/JobApplicationStatusEnum'
        message:
          type: string
        is_active:
          type: boolean
        attachment:
          type: string
          format: uri
          nullable: true
        feedback:
          type: string
        job:
          type: integer
        freelancer:
          type: integer
    PatchedJobCompletion:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusE8dEnum'
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone:
          type: string
          maxLength: 20
        is_freelancer:
          type: boolean
        is_client:
          type: boolean
        language_preference:
          type: string
          maxLength: 10
        is_verified:
          type: boolean
        wallet:
          allOf:
          - $ref: '#/components/schemas/Wallet'
          readOnly: true
        notifications:
          type: string
          readOnly: true
    PreferredCommunicationEnum:
      enum:
      - EMAIL
      - PHONE
      - VIDEO_CALL
      - CHAT
      type: string
      description: |-
        * `EMAIL` - Email
        * `PHONE` - Phone
        * `VIDEO_CALL` - Video Call
        * `CHAT` - Chat
    Rating:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        rating:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        comment:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        job:
          type: integer
        reviewer:
          type: integer
          readOnly: true
        reviewee:
          type: integer
      required:
      - created_at
      - id
      - job
      - rating
      - reviewee
      - reviewer
    Register:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone:
          type: string
          maxLength: 20
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_freelancer:
          type: boolean
        is_client:
          type: boolean
      required:
      - password
      - phone
      - username
    ResetPassword:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
        uidb64:
          type: string
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
        confirm_new_password:
          type: string
          writeOnly: true
      required:
      - confirm_new_password
      - new_password
      - token
      - uidb64
    Status911Enum:
      enum:
      - PENDING
      - COMPLETED
      - FAILED
      - REFUNDED
      type: string
      description: |-
        * `PENDING` - Pending
        * `COMPLETED` - Completed
        * `FAILED` - Failed
        * `REFUNDED` - Refunded
    StatusE8dEnum:
      enum:
      - OPEN
      - IN_PROGRESS
      - AWAITING_REVIEW
      - COMPLETED
      type: string
      description: |-
        * `OPEN` - Open
        * `IN_PROGRESS` - In Progress
        * `AWAITING_REVIEW` - Awaiting Review
        * `COMPLETED` - Completed
    Transaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        client:
          type: integer
          readOnly: true
          description: The client making the payment
        freelancer:
          type: integer
          description: The freelancer receiving the payment
        client_username:
          type: string
          readOnly: true
        freelancer_username:
          type: string
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Transaction amount in USD
        description:
          type: string
          description: Description of the transaction (e.g., project details)
          maxLength: 500
        status:
          allOf:
          - $ref: '#/components/schemas/Status911Enum'
          readOnly: true
          description: |-
            Transaction status

            * `PENDING` - Pending
            * `COMPLETED` - Completed
            * `FAILED` - Failed
            * `REFUNDED` - Refunded
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - client
      - client_username
      - created_at
      - freelancer
      - freelancer_username
      - id
      - status
      - updated_at
    TransactionStatus:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status911Enum'
          description: |-
            Transaction status

            * `PENDING` - Pending
            * `COMPLETED` - Completed
            * `FAILED` - Failed
            * `REFUNDED` - Refunded
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone:
          type: string
          maxLength: 20
        is_freelancer:
          type: boolean
        is_client:
          type: boolean
        language_preference:
          type: string
          maxLength: 10
        is_verified:
          type: boolean
        wallet:
          allOf:
          - $ref: '#/components/schemas/Wallet'
          readOnly: true
        notifications:
          type: string
          readOnly: true
      required:
      - id
      - notifications
      - phone
      - username
      - wallet
    Wallet:
      type: object
      properties:
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Current balance in USD
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
